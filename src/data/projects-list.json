{
    "projects" : [
        {
            "id": 0,
            "title": "Initiative Tracker",
            "technologies": ["Java"],
            "description": "In tabletop role-playing games such as Dungeons and Dragons, it is often useful to have a tool to keep track of the order of combat turns, also known as \"initiative\". Many such tools exist, but I wanted to try making my own. To keep the scale of the project manageable, I designed a minimal text-based user interface that allows users to add and remove turns, display them in order, and step through turns individually.",
            "githubLink": "https://github.com/oliverhalberg/InitiativeTracker",
            "imgPath": "/project-images/initiativetracker.png",
            "alt-text": "A screenshot of a terminal running the text-based Initative Tracker tool. Commands to add a turn, display a list of turns, and show the next turn have been entered, in that order. The turn order shown is 'Bech' with an initiative count of 20, 'Talia' with an initiative count of 13, 'Harper' with an initiative count of 12, and 'Caden' with an initiative count of 6. It is currently Bech's turn, on round 1."
        },
        {
            "id": 1,
            "title": "Shape Quest",
            "technologies": ["Java", "Android Studio", "Git", "PlantUML"],
            "description": "In spring 2023, I took a software development class at Vassar College (Computer Science III: Software Design and Implementation) that focused on Android development in groups. My partner for the course, Caroline Semel, and I designed, developed, and tested different iterations of our project until we reached the final result: a fully functional combat/adventure game in the form of an Android application.",
            "githubLink": "https://github.com/oliverhalberg/Shape-Quest",
            "imgPath": "/project-images/shapequest.png",
            "alt-text": "A screenshot of the app running on Android Studio's emulator. A green figure made of simple shapes, holding a sword in one hand and a flame in the other, is on the left-hand side of the screen, with associated stats displayed underneath. A large blue circle, representing an enemy, is on the right-hand side of the screen, with associated stats underneath it as well. Two buttons at the bottom of the screen give the player two options: 'Magic Attack' and 'Physical Attack'."

        },
        {
            "id": 2,
            "title": "Portfolio Website",
            "technologies": ["HTML", "CSS", "JavaScript", "React", "React Router"],
            "description": "I created a personal portfolio website (oliverhalberg.com) using React to showcase my experience and projects. Using example code from Treehouse courses as reference material, I designed, created, and styled the custom React components I needed to assemble the website.",
            "githubLink": "https://github.com/oliverhalberg/Portfolio-Site",
            "imgPath": "/project-images/oliverhalbergdotcom.png",
            "altText": "A screenshot of the home page of this website, featuring a menu across the top with the words 'Home', 'About', 'Projects', and 'Resume'. Three boxes below a brief introductory paragraph provide shortcuts for reaching the 'About', 'Projects', and 'Resume' pages."
        },
        {
            "id": 3,
            "title": "Initiative Tracker (GUI)",
            "technologies": ["JavaScript", "CSS", "React", "Electron", "Electron Builder"],
            "description": "I revisited my earlier Initiative Tracker project, upgrading it to have a graphical user interface, color themes, and some improved functionality. I used custom React components to create a front end for the project, used the Electron framework to create a desktop app for the project, and packaged it for distribution using Electron Builder. In the process, I learned the basics of Electron.js and application packaging and gained additional practice with troubleshooting. The full release is available to download from the project's GitHub page.",
            "githubLink": "https://github.com/oliverhalberg/InitiativeTracker-GUI",
            "imgPath": "/project-images/initiativetracker-gui.png",
            "alt-text": "A screenshot of the app's layout, showing an example turn order. Four dark green boxes on the left-hand side display four names and associated initiative counts: 'Bech' with an initiative count of 20, 'Talia' with an initiative count of 13, 'Harper' with an initiative count of 12, and 'Caden' with an initiative count of 6. Buttons text boxes on the right-hand side of the screen provide a way for the user to add turns and step through the turn list. The current round (1) and turn ('Bech') are also displayed on the right."
        },
        {
            "id": 4,
            "title": "Caesar Cipher Tool",
            "technologies": ["Python", "Tkinter"],
            "description": "In order to teach myself the basics of the Tkinter library, I created a small GUI tool in Python for applying a Caesar cipher to encode and decode text. I first wrote and tested the back-end logic before experimenting with different Tk elements to get the final layout. Although the final result isn't particularly fancy, it was a good way to practice Python, the Tkinter library, and creating an application from start to finish.",
            "githubLink": "https://github.com/oliverhalberg/Caesar-Cipher",
            "imgPath": "/project-images/caesarciphertool.png",
            "alt-text": "A screenshot of a basic application window, with two text boxes, a dropdown menu, and a button labeled 'Go'. The left-hand text box contains the message 'This is a secret message', the right-hand box contains the message 'Ymnx nx f xjhwjy rjxxflj', and the dropdown menu is set to '11'."
        }
    ]
}